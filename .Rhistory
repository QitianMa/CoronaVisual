gdp.log.dif.ts <- diff(log(gdp.ts))
plot(gdp.log.dif.ts)
gdp.vc <- read_csv("ChinaCPI.csv")
gdp.ts <- ts(gdp.vc$CPI, start=c(1993,1), freq=12)
plot(gdp.ts)
gdp.log.dif.ts <- diff(log(gdp.ts))
plot(gdp.log.dif.ts)
gdp.log.dif.cut.ts <- window(gdp.log.dif.ts, start=c(1997,1))
plot(gdp.log.dif.cut.ts)
gdp.log.dif.cut.ts <- window(gdp.log.dif.ts, start=c(1997,1))
plot(gdp.log.dif.cut.ts)
acf(gdp.log.dif.cut.ts)
month <- seasonaldummy(gdp.log.dif.cut.ts)
gdp.log.diff.cut.lm <- tslm(gdp.log.dif.cut.ts~month)
gdp.log.diff.cut.manual.ts <- residuals(gdp.log.diff.cut.lm) + coefficients(gdp.log.diff.cut.lm)["(Intercept)"]
autoplot(gdp.log.dif.cut.ts) +
autolayer(gdp.log.dif.cut.ts, series="RAW") +
autolayer(gdp.log.diff.cut.manual.ts, series="SA")
month <- seasonaldummy(gdp.log.dif.cut.ts)
gdp.log.diff.cut.lm <- tslm(gdp.log.dif.cut.ts~month)
gdp.log.diff.cut.manual.ts <- residuals(gdp.log.diff.cut.lm) + coefficients(gdp.log.diff.cut.lm)["(Intercept)"]
autoplot(gdp.log.dif.cut.ts) +
autolayer(gdp.log.dif.cut.ts, series="RAW") +
autolayer(gdp.log.diff.cut.manual.ts, series="SA")
gdp.train.ts <- window(gdp.log.diff.cut.manual.ts, end=c(2010,12))
gdp.valid.ts <- window(gdp.log.diff.cut.manual.ts, start=c(2011,1))
df.sum <- summary(ur.df(gdp.train.ts, type="trend", selectlags="BIC"))
df.sum@teststat[1] < df.sum@cval[4]
gdp.train.ts <- window(gdp.log.diff.cut.manual.ts, end=c(2010,12))
gdp.valid.ts <- window(gdp.log.diff.cut.manual.ts, start=c(2011,1))
df.sum <- summary(ur.df(gdp.train.ts, type="trend", selectlags="BIC"))
df.sum@teststat[1] < df.sum@cval[4]
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md)
arima.md <- auto.arima(gdp.train.ts, ic="bic", seasonal=FALSE)
summary(arima.md)
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md)
arima.md <- auto.arima(gdp.train.ts, d=0, ic="bic", seasonal=FALSE)
summary(arima.md)
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md)
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
gdp.train.ts
gdp.train.ts[1]
names(gdp.train.ts[1])
colnames(gdp.train.ts[1])
colnames(gdp.train.ts)
names(gdp.train.ts)
gdp.train.ts[length(gdp.train.ts)]
gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1]
gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1]
gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1] ^ (1/(12*13))
(gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*13))
gdp.train.ts
sapply(c(1,2), {x^3})
sapply(c(1,2), function(x){x^3})
1:12*13
1:12-1
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*13))
res.naive <- sapply(1:(12*13)-1, function(x){gdp.train.ts[1]*rate^x})
res.naive
gdp.train.sts[1]
gdp.train.ts[1]
gdp.train.ts[length(gdp.train.ts)]
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*13-1))
res.naive <- sapply(1:(12*13)-1, function(x){gdp.train.ts[1]*rate^x})
res.navie
res.naive
gdp.train.ts
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*13-1))
res.naive <- sapply(1:(12*13)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
res.naive
length(res.naive)
length(gdp.train.ts)
12*13
gdp.train.ts
13*12
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
length(mse.naive)
length(res.naive)
res.naive
gdp.train.ts
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
arima.md$residuals
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mase.naive
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(residuals(arima.mod$res, res.naive-gdp.train.ts, alternative="less")
length(arima.mod$res)
length(arima.mod$res)
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(residuals(arima.md$res, res.naive-gdp.train.ts, alternative="less")
length(arima.md$residuals)
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(residuals(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, gdp.train.ts-res.naive, alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
library(tidyverse)
library(forecast)
library(urca)
res <- replicate(n=1000, {
simul.ts <- arima.sim(n=50, list(ar=.5))
sumStats <- summary(ur.df(simul.ts, lags=1))
teststat <- sumStats@teststat[1]
critical <- sumStats@cval[2]
teststat < critical
}, simplify=FALSE)
mean(as.numeric(res))
res <- replicate(n=1000, {
simul.ts <- arima.sim(n=100, list(ar=.95))
sumStats <- summary(ur.df(simul.ts, lags=1))
teststat <- sumStats@teststat[1]
critical <- sumStats@cval[2]
teststat < critical
}, simplify=FALSE)
mean(as.numeric(res))
gdp.vc <- read_csv("ChinaCPI.csv")
gdp.ts <- ts(gdp.vc$CPI, start=c(1993,1), freq=12)
plot(gdp.ts)
gdp.log.dif.ts <- diff(log(gdp.ts))
plot(gdp.log.dif.ts)
gdp.log.dif.cut.ts <- window(gdp.log.dif.ts, start=c(1997,1))
plot(gdp.log.dif.cut.ts)
acf(gdp.log.dif.cut.ts)
month <- seasonaldummy(gdp.log.dif.cut.ts)
gdp.log.diff.cut.lm <- tslm(gdp.log.dif.cut.ts~month)
gdp.log.diff.cut.manual.ts <- residuals(gdp.log.diff.cut.lm) + coefficients(gdp.log.diff.cut.lm)["(Intercept)"]
autoplot(gdp.log.dif.cut.ts) +
autolayer(gdp.log.dif.cut.ts, series="RAW") +
autolayer(gdp.log.diff.cut.manual.ts, series="SA")
gdp.train.ts <- window(gdp.log.diff.cut.manual.ts, end=c(2010,12))
gdp.valid.ts <- window(gdp.log.diff.cut.manual.ts, start=c(2011,1))
df.sum <- summary(ur.df(gdp.train.ts, type="trend", selectlags="BIC"))
df.sum@teststat[1] < df.sum@cval[4]
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md)
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- sapply(1:(12*14)-1, function(x){gdp.train.ts[1]*rate^x})
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
dp.train.ts
gdp.train.ts
?shift
?LAG
?lag
lag(gpd.train.ts)
lag(gdp.train.ts)
stats::lag(gdp.train.ts)
stats::lag(gdp.train.ts, k=1)
gdp.train.ts
stats::lag(gdp.train.ts, k=-1)
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- lag(gdp.train.ts, k=-1) * rate
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
res.naive
mse.naive
mse.naive
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, res.naive-gdp.train.ts, alternative="less")
res.naive
gdp.train.ts
res.naive
res.naive
stats::lag(gdp.train.ts, k=-1)
gdp.train.ts
stats::lag(gdp.train.ts, k=1)
stats::lag(gdp.train.ts, k=-1)
stats::lag(gdp.train.ts, k=-1)
gdp.train.ts
res.naive-gdp.train.ts
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, window(res.naive-gdp.train.ts, c(1997,2)), alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, window(res.naive-gdp.train.ts, c(1997,2)), alternative="less")
window(res.naive-gdp.train.ts, c(1997,2)
)
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, window(res.naive-gdp.train.ts, start=c(1997,2)), alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(arima.md$residuals, window(res.naive-gdp.train.ts, start=c(1997,2)), alternative="less")
window(res.naive-gdp.train.ts, start=c(1997,2))
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (res.naive-gdp.train.ts)^2 ) )
mse.naive
dm.test(window(arima.md$residuals, start=c(1997,2)), window(res.naive-gdp.train.ts, start=c(1997,2)), alternative="less")
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (window(res.naive-gdp.train.ts)^2 ), start=c(1997,2) )
mse.naive
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( (window(res.naive-gdp.train.ts)^2 , start=c(1997,2)) )
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( window(res.naive-gdp.train.ts, start=c(1997,2)) )
mse.naive
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( window(res.naive-gdp.train.ts, start=c(1997,2) ) ))
mse.naive
dm.test(window(arima.md$residuals, start=c(1997,2)), window(res.naive-gdp.train.ts, start=c(1997,2)), alternative="less")
mean( window(res.naive-gdp.train.ts, start=c(1997,2) )
)
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive <- sqrt( mean( window(res.naive-gdp.train.ts, start=c(1997,2) )^2 ))
mse.naive
dm.test(window(arima.md$residuals, start=c(1997,2)), window(res.naive-gdp.train.ts, start=c(1997,2)), alternative="less")
window(res.naive-gdp.train.ts, start=c(1997,2)
)
sqrt(mean(window(res.naive-gdp.train.ts, start=c(1997,2))))
sqrt(mean(window(res.naive-gdp.train.ts, start=c(1997,2))^2))
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive.train <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive.train <- sqrt( mean( window(res.naive.train-gdp.train.ts, start=c(1997,2) )^2 ))
mse.naive.train
dm.test(window(arima.md$residuals, start=c(1997,2)), window(res.naive.train-gdp.train.ts, start=c(1997,2)), alternative="less")
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
res.naive.valid
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
mse.naive.train <- sqrt( mean( window(res.naive.valid-gdp.valid.ts, start=c(2011,2) )^2 ))
mse.naive.valid
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
mse.naive.valid <- sqrt( mean( window(res.naive.valid-gdp.valid.ts, start=c(2011,2) )^2 ))
mse.naive.valid
arima.md
arima.md$residuals
res.arima
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
mse.naive.valid <- sqrt( mean( window(res.naive.valid-gdp.valid.ts, start=c(2011,2) )^2 ))
mse.naive.valid
dm.test(window(res.arima, start=c(2011,2)), window(res.naive.valid-gdp.valid.ts, start=c(2011,2)), alternative="less")
res.arima
res.naive.valid
res.naive.valid-gdp.valid.ts
res <- replicate(n=1000, {
simul.ts <- arima.sim(n=50, list(ar=.5))
sumStats <- summary(ur.df(simul.ts, lags=1))
teststat <- sumStats@teststat[1]
critical <- sumStats@cval[2]
teststat < critical
}, simplify=FALSE)
mean(as.numeric(res))
res <- replicate(n=1000, {
simul.ts <- arima.sim(n=50, list(ar=.95))
sumStats <- summary(ur.df(simul.ts, lags=1))
teststat <- sumStats@teststat[1]
critical <- sumStats@cval[2]
teststat < critical
}, simplify=FALSE)
mean(as.numeric(res))
res <- replicate(n=1000, {
simul.ts <- arima.sim(n=100, list(ar=.95))
sumStats <- summary(ur.df(simul.ts, lags=1))
teststat <- sumStats@teststat[1]
critical <- sumStats@cval[2]
teststat < critical
}, simplify=FALSE)
mean(as.numeric(res))
gdp.vc <- read_csv("ChinaCPI.csv")
gdp.ts <- ts(gdp.vc$CPI, start=c(1993,1), freq=12)
plot(gdp.ts)
gdp.log.dif.ts <- diff(log(gdp.ts))
plot(gdp.log.dif.ts)
gdp.log.dif.cut.ts <- window(gdp.log.dif.ts, start=c(1997,1))
plot(gdp.log.dif.cut.ts)
acf(gdp.log.dif.cut.ts)
month <- seasonaldummy(gdp.log.dif.cut.ts)
gdp.log.diff.cut.lm <- tslm(gdp.log.dif.cut.ts~month)
gdp.log.diff.cut.manual.ts <- residuals(gdp.log.diff.cut.lm) + coefficients(gdp.log.diff.cut.lm)["(Intercept)"]
autoplot(gdp.log.dif.cut.ts) +
autolayer(gdp.log.dif.cut.ts, series="RAW") +
autolayer(gdp.log.diff.cut.manual.ts, series="SA")
month <- seasonaldummy(gdp.log.dif.cut.ts)
gdp.log.diff.cut.lm <- tslm(gdp.log.dif.cut.ts~month)
gdp.log.diff.cut.manual.ts <- residuals(gdp.log.diff.cut.lm) + coefficients(gdp.log.diff.cut.lm)["(Intercept)"]
autoplot(gdp.log.dif.cut.ts) +
autolayer(gdp.log.dif.cut.ts, series="RAW") +
autolayer(gdp.log.diff.cut.manual.ts, series="SA")
acf(gdp.log.diff.cut.manual.ts)
arima.md
arima.md$residuals
sqrt(mean(arima.md$residuals)^2)
arima.md$residuals
sqrt(mean(arima.md$residuals)^2)
sqrt(sqrt(mean(arima.md$residuals)^2))
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
sqrt(mean(arima.md$residuals)^2)
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
sqrt(mean(arima.md$residuals)^2)
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
sqrt(mean(arima.md$residuals^2))
res.arima <- Arima(gdp.valid.ts,model=arima.md)$residuals
sqrt(mean(res.arima^2))
rate <- (gdp.train.ts[length(gdp.train.ts)] / gdp.train.ts[1])^(1/(12*14-1))
res.naive.train <- stats::lag(gdp.train.ts, k=-1) * rate
mse.naive.train <- sqrt( mean( window(res.naive.train-gdp.train.ts, start=c(1997,2) )^2 ))
mse.naive.train
dm.test(window(arima.md$residuals, start=c(1997,2)), window(res.naive.train-gdp.train.ts, start=c(1997,2)), alternative="less")
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
mse.naive.valid <- sqrt( mean( window(res.naive.valid-gdp.valid.ts, start=c(2011,2) )^2 ))
mse.naive.valid
dm.test(window(res.arima, start=c(2011,2)), window(res.naive.valid-gdp.valid.ts, start=c(2011,2)), alternative="less")
res.naive.valid <- stats::lag(gdp.valid.ts, k=-1) * rate
mse.naive.valid <- sqrt( mean( window(res.naive.valid-gdp.valid.ts, start=c(2011,2) )^2 ))
mse.naive.valid
dm.test(window(res.arima, start=c(2011,2)), window(res.naive.valid-gdp.valid.ts, start=c(2011,2)), alternative="less")
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md$residuals^2)
arima.md <- auto.arima(gdp.train.ts, d=1, ic="bic", seasonal=FALSE)
summary(arima.md)
LRplot <- FALSE
if(LRplot) {
plot(superLongRun,type="l")
lines(superLongRunComp,col="green")
grid()
}
ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point(aes(colour = Species)) +
transition_states(Species,
transition_length = 2,
state_length = 1)
library(ggplot2)
ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point(aes(colour = Species)) +
transition_states(Species,
transition_length = 2,
state_length = 1)
library(gganimate)
ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point(aes(colour = Species)) +
transition_states(Species,
transition_length = 2,
state_length = 1)
setwd("~/Documents/Visualization/FinalProject")
library(tidyverse)
library(covid19.analytics)
library(lubridate)
library(reshape)
library(gganimate)
library(pals)
library(leaflet)
library(ggmap)
library(leaflet.extras)
library(htmltools)
library(maps)
library(mapproj)
ag <- covid19.data(case="aggregated")
tsc <- covid19.data(case="ts-confirmed")
data <- read_csv("COVIDlatestdata.csv")
# 1 Important Trends for Different Countries
plot.country <- function(country){
tsc.long <- tsc %>%
filter(Country.Region==country) %>%
select(5:length(tsc)) %>%
data.frame()
names(tsc.long) <- ymd(gsub('X', '', names(tsc.long)))
tsc.long <- tsc.long %>%
t() %>%
data.frame() %>%
rownames_to_column(var="date")
names(tsc.long) <- c('date', 'cases')
tsc.long
}
tsc.italy = plot.country("Italy")
tsc.turkey = plot.country("Turkey")
tsc.germany = plot.country("Germany")
tsc.colombia = plot.country("Colombia")
tsc.thailand = plot.country("Thailand")
tsc.US = plot.country("US")
tsc.all <- tsc.italy %>%
merge(tsc.turkey, by="date", all=TRUE) %>%
merge(tsc.germany, by="date", all=TRUE) %>%
merge(tsc.colombia, by="date", all=TRUE) %>%
merge(tsc.thailand, by="date", all=TRUE) %>%
merge(tsc.US, by="date", all=TRUE)
names(tsc.all) <- c("date", "Italy", "Turkey", "Germany", "Colombia", "Thailand", "US")
melt(tsc.five, id.vars="date", variable_name="country") %>%
ggplot(aes(x=date(date), y=value, col=country)) +
geom_line() +
labs(x="Date", y="Cases", title=paste("Daily Total Cases"))
ggsave("TrimeTrends.png")
# 2 What important time trends are evident in key states/cities within US
state_us <- filter(data, grepl("Cali", province) | grepl("New York", province) | grepl("Maryland", province) | grepl("New Jersey", province))
state_us["date_confirmation"] <- as.Date(sapply(state_us[["date_confirmation"]], gsub, pattern="\\.", replacement="/"), format = c("%d/%m/%Y"))
state_us %>%
group_by(province, date_confirmation) %>%
summarize(count=n()) %>%
ggplot(aes(x=date_confirmation, y=count, col=province)) +
geom_point() +
labs(x="Date", y="Cases", title=paste("Daily US by Province"))
ggsave("TrendByProvince.png")
# 3 Gender Difference
data %>%
filter(country %in% c("Finland", "Turkey", "United States", "Colombia", "Thailand")) %>%
filter(!is.na(sex)) %>%
ggplot(aes(x=country, fill=sex)) +
geom_bar(position="fill")+
ggtitle("Geder Composition")
ggsave("GenderComposition.png")
# 4  Increasing Pattern
datanew <- data %>%
mutate(date_confirmation = dmy(data$date_confirmation))
head(datanew$date_confirmation)
datanew %>% group_by(date_confirmation) %>%
summarise(count=n()) %>%
mutate(cum=cumsum(count)) %>%
ggplot(aes(x=date_confirmation, y=cum)) +
geom_line(color="red")+
geom_point(size=1.5)+
geom_area(fill="pink")+
theme_bw() +
ggtitle("Cumulative Covid Cases") +
transition_reveal(cum)
anim_save("Cumulative")
usa <- data %>%
filter(country=="United States")
usa <- usa %>%
group_by(province) %>%
summarise(count=n())
usa$province <- tolower(usa$province)
data.plot <- merge(s, usa,
by.x="region",
by.y="province")
ggplot(data.plot, aes(x=long, y=lat, group=group, fill=count)) +
geom_polygon(color="gray") +
coord_map("polyconic") +
scale_fill_gradient(low="white", high="blue") +
ggtitle("Geographic Composition")
ggsave("GeographicComposition.png")
usa <- data %>%
filter(country=='United States') %>%
group_by(city, province, longitude, latitude) %>%
summarise(count = n()) %>%
arrange(desc(count))
pal <- colorFactor(
palette = alphabet(26),
domain = as.factor(usa$province))
usa %>%
leaflet() %>%
addTiles(group = 'OpenRailwayMap') %>%
addProviderTiles('HERE', group = 'terrainDay') %>%
addProviderTiles("HikeBike", group = "HikeBike") %>%
addCircleMarkers(~longitude, ~latitude, color=~pal(as.factor(province)), radius=1, popup = ~paste0(city, "<br/>", count),
label = ~paste0(city, "(", province, ")")) %>%
addLayersControl(baseGroup=c('OpenRailwayMap', "terrainDay", 'HikeBike'),
overlayGroups=unique(usa$province)) %>%
setView(lng =-85, lat = 32,
zoom = 5.5)
